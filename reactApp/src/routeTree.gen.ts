/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TributeDetailsLazyImport = createFileRoute('/tributeDetails')()
const SuccessLazyImport = createFileRoute('/success')()
const PersonalDetailsLazyImport = createFileRoute('/personalDetails')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TributeDetailsLazyRoute = TributeDetailsLazyImport.update({
  path: '/tributeDetails',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/tributeDetails.lazy').then((d) => d.Route),
)

const SuccessLazyRoute = SuccessLazyImport.update({
  path: '/success',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/success.lazy').then((d) => d.Route))

const PersonalDetailsLazyRoute = PersonalDetailsLazyImport.update({
  path: '/personalDetails',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/personalDetails.lazy').then((d) => d.Route),
)

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/personalDetails': {
      preLoaderRoute: typeof PersonalDetailsLazyImport
      parentRoute: typeof rootRoute
    }
    '/success': {
      preLoaderRoute: typeof SuccessLazyImport
      parentRoute: typeof rootRoute
    }
    '/tributeDetails': {
      preLoaderRoute: typeof TributeDetailsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AboutLazyRoute,
  PersonalDetailsLazyRoute,
  SuccessLazyRoute,
  TributeDetailsLazyRoute,
])

/* prettier-ignore-end */
